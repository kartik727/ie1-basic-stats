Group Members:
Lakshita Bhargava (33614761)
Kartik Choudhary (33597512)

GitHub Link: https://github.com/kartik727/ie1-basic-stats.git



QUESTION 1:

Query 1: In the basic-stats folder in the main (previously called master) branch, how many commits does the README.md file have?
Answer: 16

Query 2: For the README.md file, what is the set of the different authors of its commits?
Answer: 3 authors
rjust
brunyuriy
DeveloperTommy

Query 3: For the README.md file, what is the hash of the commit that mentions the ant build tool?
Answer: commit c2111cc0d37bfde779a317e533d3a5e68b8ed9e3

Query 4: How many total commits have been made in the repository across all branches?
Answer: 82

Query 5: List the files modified in the commit with the hash 01da475.
Answer: src/Models/Model.java
src/Models/Numbers.java
src/Views/AddNumView.java
src/Views/MeanView.java
src/Views/MedianView.java
src/Views/ModeView.java
src/Views/NumbersView.java
src/Views/ResetView.java

Query 6: What is the most recent commit in the main branch?
Answer: commit da90e878188c6de8870581bdb447299821d7e87b

QUESTION 2:


QUESTION 3:
We cherry-picked 14 commits. After cherry-picking, new commit hashes are generated in feature-branch since we are selectively picking few hashes and updating our branch.
The context of the new commits is not exactly the same as the original because it may have different parent commits and may exist at a different point in the branch's history.
The commit hash also changes since the author has changed.

QUESTION 4: 


QUESTION 5:
Risks of rebasing:
1. Rebasing a branch discards the old commits and creates new commits that have different commit IDs.  
If multiple developers are working on the same branch and one of them rebases, it can create confusion and synchronization issues for the team. 

2. With rebasing we may lose context about when changes were made. This can make it challenging to identify when and why specific changes were introduced, 
which can be crucial for debugging the code.

Safe use-case for rebasing:
In software development teams, rebasing can help while working on a project with multiple features in progress simultaneously. Each developer creates a feature branch to work on their respective features. As work progresses, the master branch may receive updates from other developers for bug fixes or other features.
In this scenario, a developer working on a feature branch can use rebasing to keep their branch up-to-date with the latest changes from the main branch. 

QUESTION 6:

QUESTION 7: